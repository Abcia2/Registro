<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>